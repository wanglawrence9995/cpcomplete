{
	"name": "cpcomplete",
	"displayName": "cpcomplete",
	"publisher": "wanglawrence",
	"description": "Code compitition helper with a hello",
	"version": "1.1.0",
	"engines": {
		"vscode": "^1.31.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:extension.helloWorld",
		"onCommand:io-run.extractsnippet",
		"onCommand:io-run.mergesnippet",
		"onCommand:io-run.showsnippet",
		"onCommand:io-run.compileonly",
		"onCommand:io-run.run",
		"onCommand:io-run.run-1-input",
		"onCommand:io-run.add-input-output"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "extension.helloWorld",
				"title": "Hello CP"
			},
			{
				"command": "io-run.extractsnippet",
				"title": "IORun Extract Snippet"
			},
			{
				"command": "io-run.mergesnippet",
				"title": "IORun Merge System Snippet"
			},
			{
				"command": "io-run.showsnippet",
				"title": "IORun Search Snippet"
			},
			{
				"command": "io-run.compileonly",
				"title": "IORun Compile"
			},
			{
				"command": "io-run.run",
				"title": "IORun Run",
				"icon": "./images/run.png"
			},
			{
				"command": "io-run.run-1-input",
				"title": "IORun Run with this input only"
			},
			{
				"command": "io-run.stop",
				"title": "IORun Stop"
			},
			{
				"command": "io-run.add-input-output",
				"title": "IORun Add IO"
			}
		],
		"keybindings": [
			{
				"command": "io-run.extractsnippet",
				"key": "ctrl+alt+k 1"
			},
			{
				"command": "io-run.mergesnippet",
				"key": "ctrl+alt+k 2"
			},
			{
				"command": "io-run.showsnippet",
				"key": "ctrl+alt+k 3"
			},
			{
				"command": "io-run.compileonly",
				"key": "ctrl+alt+k c"
			},
			{
				"command": "io-run.run",
				"key": "ctrl+enter"
			},
			{
				"command": "io-run.run-1-input",
				"key": "ctrl+alt+k t"
			},
			{
				"command": "io-run.add-input-output",
				"key": "alt+ctrl+a"
			},
			{
				"command": "io-run.stop",
				"key": "shift+enter"
			}
		],
		"menus": {
			"editor/context": [
				{
					"when": "!inOutput",
					"command": "io-run.add-input-output",
					"group": "navigation"
				},
				{
					"when": "!inOutput",
					"command": "io-run.compileonly",
					"group": "navigation"
				},
				{
					"when": "!inOutput",
					"command": "io-run.run",
					"group": "navigation"
				},
				{
					"when": "!inOutput",
					"command": "io-run.run-1-input",
					"group": "navigation"
				},
				{
					"when": "!inOutput",
					"command": "io-run.extractsnippet",
					"group": "navigation"
				},
				{
					"when": "!inOutput",
					"command": "io-run.mergesnippet",
					"group": "navigation"
				},
				{
					"when": "!inOutput",
					"command": "io-run.showsnippet",
					"group": "navigation"
				},
				{
					"when": "inOutput",
					"command": "io-run.stop",
					"group": "stop-code-run"
				}
			],
			"editor/title": [
				{
					"when": "config.io-run.showRunIconInEditorTitleMenu",
					"command": "io-run.run",
					"group": "navigation"
				}
			]
		},
		"configuration": {
			"type": "object",
			"title": "IO Run configuration",
			"properties": {
				
				"io-run.executorMap.common": {
					"type": "object",
					"description": "Set the common executor of each language.",
					"default": {
						".c": {
							"compileCmd": "gcc -g -std=gnu11 -lm -Wfatal-errors ${codeFile} -o ${codeFileNoExt}",
							"runCmd": "${dirCodeFileNoExt} <${inputFile} >${outputFile}",
							"cleanupCmd": "rm ${codeFileNoExt}",
							"errorTracer": "gdb"
						},
						".cpp": {
							"compileCmd": "g++ -g -O2 -std=gnu++17 -Wfatal-errors ${codeFile} -o ${codeFileNoExt}",
							"runCmd": "${dirCodeFileNoExt} <${inputFile} >${outputFile}",
							"cleanupCmd": "rm ${codeFileNoExt}",
							"errorTracer": "gdb"
						},
						".d": {
							"compileCmd": "dmd -g ${codeFile}",
							"runCmd": "${dirCodeFileNoExt} <${inputFile} >${outputFile}",
							"cleanupCmd": "rm ${codeFileNoExt} && rm ${codeFileNoExt.o}",
							"errorTracer": "gdb"
						},
						".go": {
							"compileCmd": "go build -o ${codeFileNoExt} ${codeFile}",
							"runCmd": "${dirCodeFileNoExt} <${inputFile} >${outputFile}",
							"cleanupCmd": "rm ${codeFileNoExt}"
						},
						".hs": {
							"compileCmd": "ghc -o ${codeFileNoExt} ${codeFile}",
							"runCmd": "${dirCodeFileNoExt} <${inputFile} >${outputFile}",
							"cleanupCmd": "rm ${codeFileNoExt}"
						},
						".java": {
							"compileCmd": "javac -encoding UTF-8 ${codeFile}",
							"runCmd": "java ${codeFileNoExt} <${inputFile} >${outputFile}",
							"cleanupCmd": "rm ${codeFileNoExt.class}"
						},
						".js": {
							"runCmd": "node ${codeFile} <${inputFile} >${outputFile}"
						},
						".kt": {
							"compileCmd": "kotlinc ${codeFile} -include-runtime -d ${codeFileNoExt.jar}",
							"runCmd": "java -jar ${codeFileNoExt.jar} <${inputFile} >${outputFile}",
							"cleanupCmd": "rm ${codeFileNoExt.jar}"
						},
						".kts": {
							"runCmd": "kotlinc -script ${codeFile} <${inputFile} >${outputFile}"
						},
						".lua": {
							"runCmd": "lua ${codeFile} <${inputFile} >${outputFile}"
						},
						".ml": {
							"compileCmd": "ocamlc ${codeFile} -o ${codeFileNoExt}",
							"runCmd": "${dirCodeFileNoExt} <${inputFile} >${outputFile}",
							"cleanupCmd": "rm ${codeFileNoExt}"
						},
						".pas": {
							"compileCmd": "fpc -g ${codeFile} -o${codeFileNoExt}",
							"runCmd": "${dirCodeFileNoExt} <${inputFile} >${outputFile}",
							"cleanupCmd": "rm ${codeFileNoExt} ${codeFileNoExt.o}",
							"errorTracer": "gdb"
						},
						".py": {
							"runCmd": "python ${codeFile} <${inputFile} >${outputFile}"
						},
						".php": {
							"runCmd": "php ${codeFile} <${inputFile} >${outputFile}"
						},
						".pl": {
							"runCmd": "perl ${codeFile} <${inputFile} >${outputFile}"
						},
						".r": {
							"runCmd": "Rscript ${codeFile} <${inputFile} >${outputFile}"
						},
						".rb": {
							"runCmd": "ruby ${codeFile} <${inputFile} >${outputFile}"
						},
						".rs": {
							"PATH": "~/.cargo/bin",
							"compileCmd": "rustc -g -o ${codeFileNoExt} ${codeFile}",
							"runCmd": "${dirCodeFileNoExt} <${inputFile} >${outputFile}",
							"cleanupCmd": "rm ${codeFileNoExt}",
							"errorTracer": "gdb"
						},
						".scala": {
							"PATH": "~/scala/bin",
							"compileCmd": "scalac ${codeFile}",
							"runCmd": "scala ${codeFileNoExt} <${inputFile} >${outputFile}",
							"cleanupCmd": "rm ${codeFileNoExt.class} ${codeFileNoExt$.class}"
						},
						".groovy": {
							"PATH": "~/groovy/bin",
							"compileCmd": "groovyc ${codeFile}",
							"runCmd": "groovy ${codeFileNoExt} <${inputFile} >${outputFile}",
							"cleanupCmd": "rm ${codeFileNoExt.class}"
						},
						".swift": {
							"runCmd": "swift ${codeFile} <${inputFile} >${outputFile}"
						}
					}
				},
				"io-run.executorMap.darwin": {
					"type": "object",
					"description": "Set the executor of each language for MacOS.",
					"default": {
						".c": {
							"cleanupCmd": "rm ${codeFileNoExt} && rm -rf ${codeFileNoExt.dSYM}",
							"errorTracer": "lldb"
						},
						".cpp": {
							"cleanupCmd": "rm ${codeFileNoExt} && rm -rf ${codeFileNoExt.dSYM}",
							"errorTracer": "lldb"
						},
						".pas": {
							"cleanupCmd": "rm ${codeFileNoExt} ${codeFileNoExt.o} && rm -rf ${codeFileNoExt.dSYM}",
							"errorTracer": "lldb"
						},
						".rs": {
							"cleanupCmd": "rm ${codeFileNoExt} && rm -rf ${codeFileNoExt.dSYM}",
							"errorTracer": "lldb"
						}
					}
				},
				"io-run.executorMap.win32": {
					"type": "object",
					"description": "Set the executor of each language for Windows.",
					"default": {
						".c": {
							"PATH": "C:\\MinGW\\bin;C:\\msys64\\mingw64\\bin;C:\\Program Files (x86)\\CodeBlocks\\MinGW\\bin;C:\\Program Files\\CodeBlocks\\MinGW\\bin;C:\\cygwin\\bin;C:\\TDM-GCC-32\\bin;C:\\TDM-GCC-64\\bin",
							"compileCmd": "gcc -g -static -std=gnu11 -lm -Wfatal-errors ${codeFile} -o ${codeFileNoExt.exe}",
							"runCmd": "${dirCodeFileNoExt.exe} <${inputFile} >${outputFile}",
							"cleanupCmd": "del ${codeFileNoExt.exe}"
						},
						".cpp": {
							"PATH": "C:\\MinGW\\bin;C:\\msys64\\mingw64\\bin;C:\\Program Files (x86)\\CodeBlocks\\MinGW\\bin;C:\\Program Files\\CodeBlocks\\MinGW\\bin;C:\\cygwin\\bin;C:\\TDM-GCC-32\\bin;C:\\TDM-GCC-64\\bin",
							"compileCmd": "g++ -g -static -std=gnu++17 -Wfatal-errors ${codeFile} -o ${codeFileNoExt.exe}",
							"runCmd": "${dirCodeFileNoExt.exe} <${inputFile} >${outputFile}",
							"cleanupCmd": "del ${codeFileNoExt.exe}"
						},
						".go": {
							"PATH": "C:\\Go\\bin",
							"compileCmd": "go build -o ${codeFileNoExt.exe} ${codeFile}",
							"runCmd": "${dirCodeFileNoExt.exe} <${inputFile} >${outputFile}",
							"cleanupCmd": "del ${codeFileNoExt.exe}"
						},
						".java": {
							"cleanupCmd": "del ${codeFileNoExt.class}"
						},
						".kt": {
							"cleanupCmd": "del ${codeFileNoExt.jar}"
						},
						".ml": {
							"compileCmd": "ocamlc ${codeFile} -o ${codeFileNoExt.exe}",
							"cleanupCmd": "del ${codeFileNoExt.exe}"
						},
						".pas": {
							"compileCmd": "fpc -g ${codeFile} -o${codeFileNoExt.exe}",
							"runCmd": "${dirCodeFileNoExt.exe} <${inputFile} >${outputFile}",
							"cleanupCmd": "del ${codeFileNoExt.exe} ${codeFileNoExt.o}"
						},
						".rs": {
							"compileCmd": "rustc -g -o ${codeFileNoExt.exe} ${codeFile}",
							"runCmd": "${dirCodeFileNoExt.exe} <${inputFile} >${outputFile}",
							"cleanupCmd": "del ${codeFileNoExt.exe} ${codeFileNoExt.pdb}"
						},
						".scala": {
							"cleanupCmd": "del ${codeFileNoExt.class} ${codeFileNoExt$.class}"
						},
						".vbs": {
							"runCmd": "cscript ${dirCodeFile} <${inputFile} >${outputFile}"
						},
						".ps1": {
							"runCmd": "Powershell.exe -File ${dirCodeFile} <${inputFile} >${outputFile}"
						},
						".cmd": {
							"runCmd": "cmd.exe /C ${dirCodeFile} <${inputFile} >${outputFile}"
						},
						".bat": {
							"runCmd": "cmd.exe /C ${dirCodeFile} <${inputFile} >${outputFile}"
						}
					}
				},
				"io-run.timeLimit": {
					"type": "number",
					"default": 0,
					"description": "The maximum execution time, in seconds. If set to zero, no time limit is imposed."
				},
				"io-run.pluginListenPort": {
					"type": "number",
					"default": 8080,
					"description": "Can change this to any port so vscode used by diffferent user can have different listening port."
				},				
				"io-run.inputExtension": {
					"type": "string",
					"default": ".inp",
					"description": "Define extension for input files."
				},
				"io-run.outputExtension": {
					"type": "string",
					"default": ".out",
					"description": "Define extension for output files."
				},
				"io-run.acceptExtension": {
					"type": "string",
					"default": ".oac",
					"description": "Define extension for accepting output files."
				},
				"io-run.clearPreviousOutput": {
					"type": "boolean",
					"default": true,
					"description": "Whether to clear previous output before each run."
				},
				"io-run.saveFileBeforeRun": {
					"type": "boolean",
					"default": true,
					"description": "Whether to save the file before running."
				},
				"io-run.cleanupAfterRun": {
					"type": "boolean",
					"default": false,
					"description": "Whether to cleanup file after running."
				},
				"io-run.deleteOutputFiles": {
					"type": "boolean",
					"default": false,
					"description": "Whether to delete output files after running."
				},
				"io-run.showRunIconInEditorTitleMenu": {
					"type": "boolean",
					"default": true,
					"description": "Whether to show 'Run Code' icon in editor title menu."
				},
				"io-run.enableAnalytic": {
					"type": "boolean",
					"default": false,
					"description": "Whether to send analytics data."
				},
				"io-run.showInputFileOnWrongAnswer": {
					"type": "boolean",
					"default": true,
					"description": "Whether to show input file along with output/answer compare when you get wrong answer."
				},
				"io-run.showDiffInOutputPanel": {
					"type": "boolean",
					"default": false,
					"description": "Whether to show diff directly in output panel."
				},
				"io-run.continueOnFails": {
					"type": "boolean",
					"default": false,
					"description": "Whether to continue testing after failed on a testcase."
				},
				"io-run.diffIgnoreSpaces": {
					"type": "boolean",
					"default": true,
					"description": "Whether to ignore spaces when diff."
				},
				"io-run.showErrorOutputOnFails": {
					"type": "boolean",
					"default": true,
					"description": "Whether to show stderr when fail tests, useful to people who debug by printing values."
				}
			}
		},
		"languages": [
			{
				"id": "io-run-output",
				"mimetypes": [
					"text/x-code-output"
				]
			}
		],
		"grammars": [
			{
				"language": "io-run-output",
				"scopeName": "io-run.output",
				"path": "./syntaxes/io-run-output.json"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"test": "npm run compile && node ./node_modules/vscode/bin/test"
	},
	"dependencies": {
		"express": "^4.16.4"
	},
	"devDependencies": {
		"@types/express": "^4.16.1",
		"@types/mocha": "^2.2.42",
		"@types/node": "^10.14.4",
		"express": "^4.16.4",
		"node": "^10.15.3",
		"tslint": "^5.14.0",
		"typescript": "^3.3.4000",
		"vscode": "^1.1.33"
	}
}
